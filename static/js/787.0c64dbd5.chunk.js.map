{"version":3,"file":"static/js/787.0c64dbd5.chunk.js","mappings":"gUAoBA,GAAeA,EAAAA,EAAAA,oBAfY,SAAC,GAAY,IAAVC,EAAS,EAATA,GAC5B,OACE,gBAAKC,UAAU,0BAAf,UACE,SAAC,KAAD,CAAMD,GAAIA,EAAV,UACE,cAAGC,UAAU,qDAAb,iCAMP,GAKoD,CACnDC,kBAAmBC,EAAAA,I,kDCGfC,G,QAASC,EAAAA,GAAW,CACxBC,MAAOD,EAAAA,KACJE,SAAS,oCACTC,QAEC,icACA,CAAEC,QAAS,qCAEfC,SAAUL,EAAAA,KACPE,SAAS,8BACTI,IAAI,EAAG,oCA+EZ,EA5EmB,YACAC,EAAAA,EAAAA,MADO,IAAD,IAEvB,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYX,GACtBY,KAAM,aALNC,EADF,EACEA,aACAC,EAFF,EAEEA,QAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAiBC,GAHhC,EAGuBC,QAHvB,EAGgCD,cAK1BE,GAAUC,EAAAA,EAAAA,OAShBC,EAAAA,EAAAA,YAAU,WACR,IAC0B,EADpBC,EAAYC,OAAOC,OAAOR,GAC5BM,EAAUG,OAAS,GACrBC,EAAAA,GAAAA,MAAA,UAAYJ,EAAU,UAAtB,aAAY,EAAcjB,QAAS,CACjCsB,UAAW,IACXC,cAAc,EACdC,WAAW,EACXC,MAAO,IAGZ,GAAE,CAACd,IAEJ,OACEe,EAAAA,EAAAA,KADaC,EAAf,EAAQC,MAAwCC,EAAhD,EAA6BC,kBAE7B,OACE,UAAC,IAAD,CAAYC,QAAQ,gBAAgBC,MAAM,UAA1C,WACE,SAACC,EAAA,EAAD,CAAUC,QAAO,sBAAyBC,KAAK,UAAU5C,GAAG,cAC5D,SAAC6C,EAAA,EAAD,mCACA,kBAAMC,SAAU7B,GA1BC,SAACW,GACpBL,GAAQwB,EAAAA,EAAAA,IAAUnB,GAKnB,IAoBG,WACE,UAACoB,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAOC,QAAQ,QAAf,qBACA,SAACC,EAAA,EAAD,CACEC,QAAS,WACTlC,QAASA,EACTmC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,YAAY,oBACZC,MAAK,UAAErC,EAAOd,aAAT,aAAE,EAAcG,cAGzB,UAACuC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,wBACA,SAACC,EAAA,EAAD,CACEC,QAAS,WACTlC,QAASA,EACTmC,GAAG,WACHC,KAAK,WACLC,KAAI,UAAKnB,EAAe,OAAS,YACjCoB,YAAY,sBACZC,MAAK,UAAErC,EAAOV,gBAAT,aAAE,EAAiBD,QAP1B,UASE,SAACiD,EAAA,EAAD,CACEC,KAAMvB,EACNwB,QAAStB,UAIf,SAAC,EAAD,CAAoBtC,GAAG,sBACvB,SAAC6D,EAAA,EAAD,CAAkBC,SAAUzC,EAAc0C,UAAW1C,EAArD,0BAMP,C","sources":["components/text/TextForgotPassword.js","pages/SignInPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withErrorBoundary } from \"react-error-boundary\";\r\nimport ErrorBoundary from \"@/common/ErrorBoundary\";\r\nconst TextForgotPassword = ({ to }) => {\r\n  return (\r\n    <div className=\"mb-5 w-full text-right \">\r\n      <Link to={to}>\r\n        <p className=\"inline-block text-sm font-medium text-primary-blue\">\r\n          Forgot password?\r\n        </p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextForgotPassword.propTypes = {\r\n  to: PropTypes.string.isRequired,\r\n};\r\nexport default withErrorBoundary(TextForgotPassword, {\r\n  FallbackComponent: ErrorBoundary,\r\n});\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport useToggleValue from \"~/hooks/useToggleValue\";\r\nimport { LayoutAuth } from \"~/layouts\";\r\n\r\nimport ButtonGoogle from \"@/button/ButtonGoogle\";\r\nimport ButtonSubmitAuth from \"@/button/ButtonSubmitAuth\";\r\n\r\nimport TextAuth from \"@/text/TextAuth\";\r\nimport TextForgotPassword from \"@/text/TextForgotPassword\";\r\n\r\nimport FormGroup from \"@/common/FormGroup\";\r\nimport Input from \"@/input/Input\";\r\nimport Label from \"@/label/Label\";\r\nimport TogglePassword from \"@/toggle/TogglePassword\";\r\n\r\nimport { authLogin } from \"~/sagas/auth/auth-slice\";\r\nimport { getToken } from \"~/utils/auth\";\r\nconst schame = Yup.object({\r\n  email: Yup.string()\r\n    .required(\"Please enter your emaill address\")\r\n    .matches(\r\n      // eslint-disable-next-line no-control-regex\r\n      /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\r\n      { message: \"Please enter valid email address\" }\r\n    ),\r\n  password: Yup.string()\r\n    .required(\"Please enter your password\")\r\n    .min(8, \"Password must be 8 characters\"),\r\n});\r\n\r\nconst SignInPage = () => {\r\n  const navigate = useNavigate();\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { errors, isValid, isSubmitting },\r\n  } = useForm({\r\n    resolver: yupResolver(schame),\r\n    mode: \"onSubmit\",\r\n  });\r\n  const dispath = useDispatch();\r\n  const handleSignIn = (values) => {\r\n    dispath(authLogin(values));\r\n    // const { accessToken } = getToken();\r\n    // if (accessToken) {\r\n    //   navigate(-1);\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const arrErrors = Object.values(errors);\r\n    if (arrErrors.length > 0) {\r\n      toast.error(arrErrors[0]?.message, {\r\n        autoClose: 2000,\r\n        pauseOnHover: false,\r\n        draggable: true,\r\n        delay: 50,\r\n      });\r\n    }\r\n  }, [errors]);\r\n\r\n  const { value: showPassword, handleToggleValue: handleTogglePassword } =\r\n    useToggleValue();\r\n  return (\r\n    <LayoutAuth heading=\"Wellcome back\" title=\"Sign in\">\r\n      <TextAuth pagraph={`Don't have account?`} span=\"Sign up\" to=\"/sign-up\" />\r\n      <ButtonGoogle>Sign in with google</ButtonGoogle>\r\n      <form onSubmit={handleSubmit(handleSignIn)}>\r\n        <FormGroup>\r\n          <Label htmlFor=\"email\">Email*</Label>\r\n          <Input\r\n            variant={\"outlined\"}\r\n            control={control}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"example@gmail.com\"\r\n            error={errors.email?.message}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label htmlFor=\"password\">Password*</Label>\r\n          <Input\r\n            variant={\"outlined\"}\r\n            control={control}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type={`${showPassword ? \"text\" : \"password\"}`}\r\n            placeholder=\"Enter your password\"\r\n            error={errors.password?.message}\r\n          >\r\n            <TogglePassword\r\n              open={showPassword}\r\n              onClick={handleTogglePassword}\r\n            />\r\n          </Input>\r\n        </FormGroup>\r\n        <TextForgotPassword to=\"/forgot-password\" />\r\n        <ButtonSubmitAuth disabled={isSubmitting} isLoading={isSubmitting}>\r\n          Sign in\r\n        </ButtonSubmitAuth>\r\n      </form>\r\n    </LayoutAuth>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n"],"names":["withErrorBoundary","to","className","FallbackComponent","ErrorBoundary","schame","Yup","email","required","matches","message","password","min","useNavigate","useForm","resolver","yupResolver","mode","handleSubmit","control","formState","errors","isSubmitting","isValid","dispath","useDispatch","useEffect","arrErrors","Object","values","length","toast","autoClose","pauseOnHover","draggable","delay","useToggleValue","showPassword","value","handleTogglePassword","handleToggleValue","heading","title","TextAuth","pagraph","span","ButtonGoogle","onSubmit","authLogin","FormGroup","Label","htmlFor","Input","variant","id","name","type","placeholder","error","TogglePassword","open","onClick","ButtonSubmitAuth","disabled","isLoading"],"sourceRoot":""}